1. In words, list 3 reasons why structs are different from resources.
1. Structs can be copied, resources cannot
2. Structs can be created in transactions or scripts, resources can only be created inside the contract.
3. Structs can be overwritten, resources cannot 

2. Describe a situation where a resource might be better to use than a struct.
Resources would be better when you want more control over access to the data, for example, if you want to control when they are created or modified.

3. What is the keyword to make a new resource?
create

4. Can a resource be created in a script or transaction (assuming there isn't a public function to create one)?
No

5. What is the type of the resource below?
Jacob

pub resource Jacob {

}

6. Let's play the "I Spy" game from when we were kids. I Spy 4 things wrong with this code. Please fix them.

pub contract Test {

    // Hint: There's nothing wrong here ;)
    pub resource Jacob {
        pub let rocks: Bool
        init() {
            self.rocks = true
        }
    }

    pub fun createJacob(): @Jacob { // there is 1 here @
        let myJacob <- create Jacob() // there are 2 here <-, create
        return <- myJacob // there is 1 here <-
    }
}